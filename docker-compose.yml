version: '4'

services:
  solr:
    image: solr:latest
    container_name: restaurant-solr
    ports:
      - "8983:8983"
    volumes:
      - ./data:/var/solr
    command:
      - solr-precreate
      - restaurants

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "log-events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: myoluk
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  
  user-review-service:
    container_name: user-review-service
    build:
      context: ./user-review-service
    ports:
      - "8080:8080"
  user-service:
    container_name: user-service
    build:
      context: ./user-service
    ports:
      - "8081:8081"
  restaurant-service:
    container_name: restaurant-service
    build:
      context: ./restaurant-service
    ports:
      - "8082:8082"
  kafka-logger-service:
    container_name: kafka-logger-service
    build:
      context: ./kafka-logger-service
    ports:
      - "8083:8083"

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: